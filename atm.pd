import "operator_panel.pd";
import "cashdispenser.pd";
import "log.pd";
import "cardreader.pd";
class ATM ^=

abstract
	const OFF_STATE : int ^= 0;
	const IDLE_STATE : int ^= 1;
	const SERVING_CUSTOMER_STATE: int ^= 2;		

	var id: int;
	var place: string;
	var bankName: string;
	var bankAddress: string; //originally an InetAddress
	var state: int;
	var switchOn: bool;
	var cardInserted:bool;
	var operatorPanel:OperatorPanel;
	var log:Log;
	var cardReader:CardReader;
	var cashDispenser:CashDispenser;
	var networkToBank:NetworkToBank;
	//todo CustomerConsole,EnvelopeAcceptor,NetworkToBank,OperatorPanel,ReceiptPrinter

	invariant state in set of int {0,1,2};
	invariant (switchOn ==> (state = 2 | state = 1)); //

interface
	function OFF_STATE;
	function IDLE_STATE;
	function SERVING_CUSTOMER_STATE;
	function id;
	function place;
	function bankName;
//	function cardReader;
	selector cardReader;

//Bronca - passando self/this para outros objetos antes de ter finalizado o construtor

	build{idIn:int,placeIn:string,bankNameIn:string,bankAddressIn:string}
		post cardReader!= CardReader{} 
			 then id!= idIn
			 then place!= placeIn
			 then bankName!=bankNameIn
			 then bankAddress!=bankAddressIn
			 then state!=OFF_STATE
			 then switchOn!=false
			 then cardInserted!=false
			 then operatorPanel!=OperatorPanel{}
			 then log!=Log{}
			 then cashDispenser!=CashDispenser{}
			 then networkToBank!=NetworkToBank{log,bankAddress};

//		post cardReader!= CardReader{},id!= idIn, place!= placeIn,bankName!=bankNameIn,bankAddress!=bankAddressIn,state!=OFF_STATE,switchOn!=false,cardInserted!=false,operatorPanel!=OperatorPanel{},log!=Log{},cashDispenser!=CashDispenser{},networkToBank!=NetworkToBank{log,"ip sem nocao"};


	schema !performStartup
		pre state = OFF_STATE,
			~self.networkToBank.openConn
		post (let initialCash ^= operatorPanel.getInitialCash;
		      self.cashDispenser!setInitialCash(initialCash)
		      then networkToBank!openConnection
			  then switchOn! = true
			  then state! = IDLE_STATE);


//	schema !performShutdown
//		post ?;

end;