import "operator_panel.pd";
import "cashdispenser.pd";
import "log.pd";
class ATM ^=

abstract
	var id: int;
	var place: string;
	var bankName: string;
	var bankAddress: string; //originally an InetAddress
	var state: int;
	var switchOn: bool;
	var cardInserted:bool;
	var operatorPanel:OperatorPanel;
	var log:Log;
	var cashDispenser:CashDispenser;
	//todo CardReader,CustomerConsole,EnvelopeAcceptor,NetworkToBank,OperatorPanel,ReceiptPrinter

	invariant state in set of int {0,1,2};
	invariant (~(state = 2) | switchOn ); //state=2 -> switchOn=true

interface
	function id;
	function place;
	function bankName;
	function OFF_STATE : int
		^= 0;
	function IDLE_STATE : int
		^= 1;
	function SERVING_CUSTOMER_STATE: int
		^= 2;		
	function performStartup: int //make this return void
		^= (let initialCash ^= operatorPanel.getInitialCash;
		   	cashDispenser.setInitialCash(initialCash);
			//TODO openConnection;
			1;
		   )

//	schema !performShutdown
//		post ?;

end;