import "operator_panel.pd";
import "cashdispenser.pd";
import "log.pd";
import "cardreader.pd";
class ATM ^=

abstract
	const OFF_STATE : int ^= 0;
	const IDLE_STATE : int ^= 1;
	const SERVING_CUSTOMER_STATE: int ^= 2;		

	var id: int;
	var place: string;
	var bankName: string;
	var bankAddress: string; //originally an InetAddress
	var state: int;
	var switchOn: bool;
	var cardInserted:bool;
	var operatorPanel:OperatorPanel;
	var log:Log;
	var cardReader:CardReader;
	var cashDispenser:CashDispenser;
	var networkToBank:NetworkToBank;
	//todo CustomerConsole,EnvelopeAcceptor,NetworkToBank,OperatorPanel,ReceiptPrinter

	invariant state in set of int {0,1,2};
	invariant (~(state = 2) | switchOn ); //state=2 -> switchOn=true

interface
	function OFF_STATE;
	function IDLE_STATE;
	function SERVING_CUSTOMER_STATE;
	function id;
	function place;
	function bankName;
//	function cardReader;
	selector cardReader;

	schema !performStartup
		post (let initialCash ^= operatorPanel.getInitialCash;
		      self.cashDispenser!setInitialCash(initialCash)
		      then networkToBank!openConnection);


//	schema !performShutdown
//		post ?;

end;