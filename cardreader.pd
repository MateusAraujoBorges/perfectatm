import "card.pd";

class CardReaderStatus ^= enum withCard,noCard,retainedCard end;

class CardReader ^=

abstract
	var state : CardReaderStatus;
	var dummyCard : Card;
interface

	build{}
		post state! = noCard@CardReaderStatus, dummyCard!= Card{42};

	function state;
	function card : Card ^= dummyCard;


	schema !readCard
	       pre state = noCard@CardReaderStatus
	       post state! = withCard@CardReaderStatus,
	            dummyCard! = (Card{1} after it!changeNumber(self.dummyCard.number));

	schema !ejectCard
	       pre state = withCard@CardReaderStatus
	       post state! = noCard@CardReaderStatus;

	schema !retainCard
	       pre state = withCard@CardReaderStatus
	       post state! = retainedCard@CardReaderStatus;


end;